(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";
Object.defineProperties(exports, {
  default: {get: function() {
      return $__default;
    }},
  __esModule: {value: true}
});
var $__react__;
var React = ($__react__ = require("react"), $__react__ && $__react__.__esModule && $__react__ || {default: $__react__}).default;
var ESC_KEY = 27;
var ENTER_KEY = 13;
var COMMA_KEY = 188;
var TAB_KEY = 9;
var SPACE_KEY = 0;
var SPACE1_KEY = 32;
var BACKSPACE_KEY = 8;
var Tag = React.createClass({
  displayName: 'Tag',
  render: function() {
    var $__0 = this.props,
        tag = $__0.tag,
        handleRemove = $__0.handleRemove;
    return (React.createElement("span", {className: "tags-input-item"}, React.createElement("span", null, tag, "  "), React.createElement("a", {
      title: "Remove tag",
      onClick: handleRemove
    }, "x")));
  }
});
var $__default = React.createClass({
  getInitialState: function() {
    return {userInput: ''};
  },
  handleRemove: function(tag) {
    this.props.removeTag(tag);
  },
  addTag: function(tag) {
    if (-1 !== tag.indexOf(',') || -1 !== tag.indexOf(' '))
      return new Error("Don't do that!");
    this.props.addTag(tag);
  },
  handleKeydown: function(e) {
    var charCode = e.which || e.keyCode;
    var keys = [ESC_KEY, ENTER_KEY, COMMA_KEY, TAB_KEY, SPACE_KEY, SPACE1_KEY];
    if (-1 !== keys.indexOf(charCode)) {
      e.preventDefault();
      if (this.state.userInput.length !== 0)
        this.addTag(this.state.userInput);
      this.clearAndFocusInput();
    }
    if (charCode === BACKSPACE_KEY && this.state.userInput.length === 0) {
      this.handleRemove(this.props.tags[this.props.tags.length - 1]);
    }
  },
  handleChange: function(e) {
    this.setState({userInput: e.target.value});
  },
  handleClick: function(e) {
    this.refs.userInput.getDOMNode().focus();
  },
  clearAndFocusInput: function() {
    this.setState({userInput: ''}, function() {
      this.refs.userInput.getDOMNode().focus();
    });
  },
  render: function() {
    var $__0 = this.props,
        tags = $__0.tags;
    return (React.createElement("div", {
      className: "tags-input-container",
      onClick: this.handleClick
    }, React.createElement("div", {className: "tags-input-list"}, tags.map(function(tag) {
      return React.createElement(Tag, {
        tag: tag,
        key: tag,
        handleRemove: this.handleRemove.bind(this, tag)
      });
    }.bind(this))), React.createElement("div", null, React.createElement("input", {
      type: "text",
      ref: "userInput",
      className: "tags-input-input",
      value: this.state.userInput,
      onKeyDown: this.handleKeydown,
      onChange: this.handleChange
    })), React.createElement("div", {className: "tags_clear"})));
  }
});

//# sourceMappingURL=<compileOutput>


},{"react":"react"}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
